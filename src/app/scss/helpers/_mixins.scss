@use "~../../../../scss/helpers/colors" as *;

@mixin fonts {
  /*
  ==========================================================================
                          import local fonts SFUIText-Medium.otf
  =========================================================================
*/
  @font-face {
    font-family: "SFUI";
    src: url("/assets/fonts/San/SFUIText/SFUIText-Light.otf") format("opentype");
    font-display: swap;
  }
  @font-face {
    font-family: "SFUIText-Medium";
    src: url("/assets/fonts/San/SFUIText/SFUIText-Medium.otf")
      format("opentype");
    font-display: swap;
  }
  @font-face {
    font-family: "SFUIRegular";
    src: url("/assets/fonts/San/SFUIDisplay/SFUIDisplay-Regular.otf")
      format("opentype");
    font-display: swap;
  }
  @font-face {
    font-family: "BalooBhaijaan2Regular";
    src: url("/assets/fonts/San/Baloo/BalooBhaijaan2-VariableFont_wght.ttf");
    font-display: swap;
  }
}

$screens: (
  "xxs": 0,
  "xs": 380px,
  "sm": 575.98px,
  "md": 767.98px,
  "lg": 991.98px,
  "xlg": 1199.98px,
  "xxlg": 1399px,
);
$fonts: (
  headingFont: "SFUIRegular",
  paragraphFont: "BalooBhaijaan2Regular",
  labelFont: "SFUI",
  Medium: "SFUIText-Medium",
);

/* =======================================
       Media query
==========================================*/

@mixin custem-screen($firstScreen, $secondScreen) {
  @media (min-width: map-get($screens, $firstScreen)) and (max-width: map-get($screens, $secondScreen)) {
    @content;
  }
}

@mixin screen($point) {
  @if $point == xxs {
    // XXX-Small devices (portrait phones, less than 380px)
    @media (max-width: 380px) {
      @content;
    }
  } @else if $point == xs {
    // X-Small devices (portrait phones, between 381px and 576px)
    @media (min-width: 381px) and (max-width: 575.98px) {
      @content;
    }
  } @else if $point == sm {
    // Small devices (landscape phones, less than 768px)
    @media (min-width: 575.98px) and (max-width: 767.98px) {
      @content;
    }
  } @else if $point == md {
    // Medium devices (tablets, less than 992px)
    @media (min-width: 767.98px) and (max-width: 991.98px) {
      @content;
    }
  } @else if $point == lg {
    // Large devices (desktops, less than 1200px)
    @media (min-width: 991.98px) and (max-width: 1199.98px) {
      @content;
    }
  } @else if $point == xlg {
    // X-Large devices (large desktops, less than 1400px)
    @media (min-width: 1199.98px) and (max-width: 1399.98px) {
      @content;
    }
  }
}

/* =======================================
       Breakpoints
==========================================*/
@mixin BreakPoint($point) {
  @if $point == xxs {
    // XXX-Small devices (portrait phones, less than 380px)
    @media (max-width: 380px) {
      @content;
    }
  } @else if $point == xs {
    // X-Small devices (portrait phones, between 381px and 576px)
    @media (max-width: 575.98px) {
      @content;
    }
  } @else if $point == sm {
    // Small devices (landscape phones, less than 768px)
    @media (max-width: 767.98px) {
      @content;
    }
  } @else if $point == md {
    // Medium devices (tablets, less than 992px)
    @media (max-width: 991.98px) {
      @content;
    }
  } @else if $point == lg {
    // Large devices (desktops, less than 1200px)
    @media (max-width: 1199.98px) {
      @content;
    }
  } @else if $point == xlg {
    // X-Large devices (large desktops, less than 1400px)
    @media (max-width: 1399.98px) {
      @content;
    }
  }
}
